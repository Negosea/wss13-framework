<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WSS+13 Framework - Ecossistema de Agentes IA</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            color: white;
            margin-bottom: 40px;
        }

        .header h1 {
            font-size: 3rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .main-content {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .agents-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .agent-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            transition: transform 0.3s ease;
        }

        .agent-card:hover {
            transform: translateY(-5px);
        }

        .agent-card h3 {
            font-size: 1.3rem;
            margin-bottom: 10px;
        }

        .agent-card p {
            opacity: 0.9;
            font-size: 0.9rem;
        }

        .form-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            margin: 30px 0;
        }

        .form-section h2 {
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            color: #555;
        }

        .form-group input {
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }

        .buttons-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }

        .btn {
            padding: 15px 25px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

        .results-section {
            background: #e8f5e8;
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
            display: none;
        }

        .results-section.show {
            display: block;
        }

        .loading {
            text-align: center;
            padding: 20px;
            display: none;
        }

        .loading.show {
            display: block;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .footer {
            text-align: center;
            color: white;
            margin-top: 40px;
        }

        .status-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            background: #28a745;
            border-radius: 50%;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üèóÔ∏è WSS+13 Framework</h1>
            <p>Ecossistema de 5 Agentes IA para Constru√ß√£o Civil</p>
            <p><span class="status-indicator"></span>Sistema Online</p>
        </div>

        <div class="main-content">
            <h2 style="text-align: center; margin-bottom: 30px;">ü§ñ Nossos Agentes Especializados</h2>
            
            <div class="agents-grid">
                <div class="agent-card">
                    <h3>üèóÔ∏è Breno Silva</h3>
                    <p><strong>Engenheiro Estrutural</strong></p>
                    <p>CREA-SP 123456/D</p>
                    <p>25 anos de experi√™ncia</p>
                </div>
                
                <div class="agent-card">
                    <h3>üí∞ Paulo Mendes</h3>
                    <p><strong>Analista Financeiro</strong></p>
                    <p>CRC-SP 654321</p>
                    <p>15 anos de experi√™ncia</p>
                </div>
                
                <div class="agent-card">
                    <h3>üë∑ Jos√© Silva</h3>
                    <p><strong>Mestre de Obras</strong></p>
                    <p>SINDUSCON-SP 789123</p>
                    <p>20 anos de experi√™ncia</p>
                </div>
                
                <div class="agent-card">
                    <h3>‚ö†Ô∏è Ricardo Prote√ß√£o</h3>
                    <p><strong>Eng. Seguran√ßa</strong></p>
                    <p>CREA-SP 456789/D</p>
                    <p>18 anos de experi√™ncia</p>
                </div>
                
                <div class="agent-card">
                    <h3>üíº Helena Vendas</h3>
                    <p><strong>Diretora Comercial</strong></p>
                    <p>CRA-SP 987321</p>
                    <p>12 anos de experi√™ncia</p>
                </div>
            </div>

            <div class="form-section">
                <h2>üìä Analisar Seu Projeto</h2>
                <form id="projectForm">
                    <div class="form-grid">
                        <div class="form-group">
                            <label for="projectName">Nome do Projeto:</label>
                            <input type="text" id="projectName" name="name" required placeholder="Ex: Resid√™ncia Familiar">
                        </div>
                        
                        <div class="form-group">
                            <label for="area">√Årea (m¬≤):</label>
                            <input type="number" id="area" name="area" required placeholder="Ex: 120" min="1">
                        </div>
                        
                        <div class="form-group">
                            <label for="structuralLoad">Carga Estrutural (kN):</label>
                            <input type="number" id="structuralLoad" name="structural_load" required placeholder="Ex: 600" min="1">
                        </div>
                        
                        <div class="form-group">
                            <label for="soilTension">Tens√£o do Solo (kPa):</label>
                            <input type="number" id="soilTension" name="soil_tension" required placeholder="Ex: 45" min="1">
                        </div>
                        
                        <div class="form-group">
                            <label for="budget">Or√ßamento (R$) - Opcional:</label>
                            <input type="number" id="budget" name="budget" placeholder="Ex: 300000" min="0">
                        </div>
                    </div>

                    <div class="buttons-grid">
                        <button type="button" class="btn btn-primary" onclick="analyzeAgent('structural')">
                            üèóÔ∏è An√°lise Estrutural
                        </button>
                        <button type="button" class="btn btn-primary" onclick="analyzeAgent('financial')">
                            üí∞ An√°lise Financeira
                        </button>
                        <button type="button" class="btn btn-primary" onclick="analyzeAgent('construction')">
                            üë∑ An√°lise de Obra
                        </button>
                        <button type="button" class="btn btn-primary" onclick="analyzeAgent('safety')">
                            ‚ö†Ô∏è An√°lise de Seguran√ßa
                        </button>
                        <button type="button" class="btn btn-primary" onclick="analyzeAgent('commercial')">
                            üíº An√°lise Comercial
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="analyzeComplete()">
                            üöÄ An√°lise Completa (Todos os Agentes)
                        </button>
                    </div>
                </form>

                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p>Processando an√°lise...</p>
                </div>

                <div class="results-section" id="results">
                    <h3>üìã Resultados da An√°lise</h3>
                    <div id="resultsContent"></div>
                </div>
            </div>

            <div style="text-align: center; margin: 30px 0;">
                <a href="/docs" class="btn btn-secondary">üìö Documenta√ß√£o da API</a>
                <a href="/health" class="btn btn-secondary">üîç Status do Sistema</a>
            </div>
        </div>

        <div class="footer">
            <p>Desenvolvido por <strong>Marcos Sea</strong></p>
            <p>WSS+13 Framework - Revolucionando a Constru√ß√£o Civil com IA</p>
        </div>
    </div>

    <script>
        // Fun√ß√£o para coletar dados do formul√°rio
        function getFormData() {
            const form = document.getElementById('projectForm');
            const formData = new FormData(form);
            const data = {};
            
            for (let [key, value] of formData.entries()) {
                if (value) {
                    data[key] = isNaN(value) ? value : Number(value);
                }
            }
            
            return data;
        }

        // Fun√ß√£o para mostrar loading
        function showLoading() {
            document.getElementById('loading').classList.add('show');
            document.getElementById('results').classList.remove('show');
        }

        // Fun√ß√£o para esconder loading
        function hideLoading() {
            document.getElementById('loading').classList.remove('show');
        }

        // Fun√ß√£o para mostrar resultados
        function showResults(data) {
            hideLoading();
            const resultsDiv = document.getElementById('results');
            const contentDiv = document.getElementById('resultsContent');
            
            contentDiv.innerHTML = `<pre>${JSON.stringify(data, null, 2)}</pre>`;
            resultsDiv.classList.add('show');
            resultsDiv.scrollIntoView({ behavior: 'smooth' });
        }

        // Fun√ß√£o para analisar com um agente espec√≠fico
        async function analyzeAgent(agentType) {
            const data = getFormData();
            
            if (!data.name || !data.area || !data.structural_load || !data.soil_tension) {
                alert('Por favor, preencha todos os campos obrigat√≥rios!');
                return;
            }

            showLoading();

            try {
                const response = await fetch(`/analyze/${agentType}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                if (!response.ok) {
                    throw new Error(`Erro: ${response.status}`);
                }

                const result = await response.json();
                showResults(result);
            } catch (error) {
                hideLoading();
                alert(`Erro na an√°lise: ${error.message}`);
            }
        }

        // Fun√ß√£o para an√°lise completa
        async function analyzeComplete() {
            const data = getFormData();
            
            if (!data.name || !data.area || !data.structural_load || !data.soil_tension) {
                alert('Por favor, preencha todos os campos obrigat√≥rios!');
                return;
            }

            showLoading();

            try {
                const response = await fetch('/analyze/complete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                if (!response.ok) {
                    throw new Error(`Erro: ${response.status}`);
                }

                const result = await response.json();
                showResults(result);
            } catch (error) {
                hideLoading();
                alert(`Erro na an√°lise: ${error.message}`);
            }
        }

        // Verificar status da API ao carregar a p√°gina
        window.addEventListener('load', async function() {
            try {
                const response = await fetch('/health');
                const health = await response.json();
                console.log('API Status:', health);
            } catch (error) {
                console.error('API n√£o est√° respondendo:', error);
            }
        });
    </script>
</body>
</html>
